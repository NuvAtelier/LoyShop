name: Build and Package

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      checks: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags
      
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Cache SpigotBuildTools
      uses: actions/cache@v3
      with:
        path: |
          ./SpigotBuildTools
        key: ${{ runner.os }}-spigot-${{ hashFiles('buildMavenRepo.sh', 'buildMavenRepo.Dockerfile') }}
        restore-keys: |
          ${{ runner.os }}-spigot-
        
    - name: Compute version with commit hash
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          COMMIT_HASH=${{ github.event.pull_request.head.sha }}
        else
          COMMIT_HASH=${{ github.sha }}
        fi
        COMMIT_HASH=${COMMIT_HASH:0:7}

        CURRENT_VERSION=$(grep -m 1 "<revision>" pom.xml | sed 's/.*<revision>\(.*\)<\/revision>.*/\1/')
        NEW_VERSION="${CURRENT_VERSION}-${COMMIT_HASH}"

        echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV
        
    - name: Generate Maven toolchains.xml (JDK 21)
      run: |
        mkdir -p ~/.m2
        cat > ~/.m2/toolchains.xml <<'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <toolchains>
          <toolchain>
            <type>jdk</type>
            <provides>
              <version>21</version>
              <vendor>any</vendor>
            </provides>
            <configuration>
              <jdkHome>${JAVA_HOME}</jdkHome>
            </configuration>
          </toolchain>
        </toolchains>
        EOF

    - name: Build Maven Repository
      run: |
        chmod +x ./buildMavenRepo.sh
        ./buildMavenRepo.sh
      
    - name: Build with Maven
      run: mvn -B -Pcoverage -Drevision=${{ env.VERSION }} clean verify

    - name: Publish Test Results
      if: always() && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository)
      uses: dorny/test-reporter@v1
      continue-on-error: true
      with:
        name: JUnit Tests
        path: '**/target/surefire-reports/*.xml'
        reporter: java-junit
        fail-on-error: false
        fail-on-empty: false

    - name: Comment PR with JaCoCo Coverage Report
      if: always() && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository)
      uses: madrapps/jacoco-report@v1.6.1
      continue-on-error: true
      with:
        paths: |
          **/target/site/jacoco/jacoco.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 0
        min-coverage-changed-files: 0
        title: Coverage Report
        update-comment: true

    - name: Upload JaCoCo XML
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-xml
        path: '**/target/site/jacoco/jacoco.xml'
        if-no-files-found: warn

    - name: Coverage Summary (Job Summary)
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: '**/target/site/jacoco/jacoco.xml'
        badge: true
        format: markdown
        output: both
      
    - name: Upload Artifact
      id: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: shop-plugin
        path: target/Shop-*.jar
        
    - name: Find JAR filename
      id: find-jar
      run: |
        JAR_FILE=$(find target -name "Shop-*.jar" -not -name "original-Shop-*.jar" | head -n 1)
        JAR_FILENAME=$(basename "$JAR_FILE")
        echo "JAR_FILENAME=$JAR_FILENAME" >> $GITHUB_ENV
        
    - name: Create workflow summary
      run: |
        echo "# Build Completed Successfully! 🎉" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Download" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** ${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Direct Download Link" >> $GITHUB_STEP_SUMMARY
        echo "⬇️ [Download ${{ env.JAR_FILENAME }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "To download, click the link above, then click on the 'Artifacts' dropdown and select 'shop-plugin'." >> $GITHUB_STEP_SUMMARY
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: target/Shop-*.jar 