#
# WIKI PAGE: https://github.com/snowgears/shopbugs/wiki/Configuration-(config.yml) #
#

# =================================================================== #
#                         GENERAL SETTINGS                            #
# =================================================================== #
# https://github.com/snowgears/shopbugs/wiki/Configuration-(config.yml)#general-settings
# This runs a check and notifies operators on login that a new Shop version is available #
checkUpdates: true

# Should Shop use Permissions to manage access to features?
# * `true`  - Shop will check player permissions (https://github.com/snowgears/shopbugs/wiki/Permissions)
#             Players will by default have no permissions and must be given specific permissions to use the plugin.
# * `false` - Shop will allow players to create shops, buy/sell items, etc. without any permissions checks.
#             Plugin management commands/tools are restricted to operators only. 
usePermissions: true

# This enables a graphical user interface to use all shop features without typing commands #
enableGUI: true

# This is the command alias that will be used as the base for all shop commands #
commandAlias: shop

# This will permanently delete a player's shops if they have not logged onto the server after X hours #
# Set this to 0 to never auto-delete a player's shops #
deletePlayerShopsAfterXHoursOffline: 0

# =================================================================== #
#                      CURRENCY AND ECONOMY                           #
# =================================================================== #
# https://github.com/snowgears/shopbugs/wiki/Configuration-(config.yml)#currency-and-economy-settings

# type :
# ITEM - shops will use a specified item as the currency (default is Emerald). To change this item in-game, run the
#        command '/shop setcurrency while holding the item in your hand you want to use as currency.
# VAULT - shops will use Vault as the currency. (This requires Vault to be installed on the server)
# EXPERIENCE - shops will use experience points as the currency

# name :
# This is the name of the currency that shows up on signs. If you are using ITEM, you will want to change
# this to the type of item being used. If you are using VAULT, you will want to change this to a currency symbol
# like '$'. If you are using EXPERIENCE, you will want to name this "Experience" or something similar

# format :
# This is the order in which prices are displayed. For example, if you are using ITEM with Emeralds as the currency,
# '[price] [name]' would show '5 Emerald(s)'. If you are using VAULT, this would show '5 $', so setting this as
# '[name][price]' would show '$5'.
currency:
   type: ITEM
   name: "Emerald(s)"
   format: "[price] [name]"

# Does your currency support fractional units?
# false (default) - Only allow whole currency units
# true - Allow fractional units down to 0.01 (Vault Required!)
allowFractionalCurrency: false
# This allows shops to sell partial stacks for a calculated partial rate if the shop is low on stock #
# https://github.com/snowgears/shopbugs/wiki/Configuration-(config.yml)#allowpartialsales #
allowPartialSales: true
# This will make it so shops will only complete transactions if the item durabilities are the same #
checkItemDurability: true
# This will make it so shops will still complete transactions if the item "repair cost" is different, like with enchanted books or armor
# * "repair cost" defines how many times an item has been combined in an anvil
ignoreItemRepairCost: true

# The amount of money a player is charged to create a shop #
creationCost: 0
# The amount of money a player is charged to destroy a shop #
destructionCost: 0

# The amount of money a player is charged to teleport to a shop (via the GUI) #
teleportCost: 0
# The amount of time (in seconds) a player must wait between shop teleports #
teleportCooldown: 0

# This returns the creation cost to the shop creator when the shop is destroyed #
# Adds virtual funds if using vault currency and drops the item on the chest location if using physical currency #
returnCreationCost: false

# This formats suffixes for large numbers like (5,000 = 5k) or (5,000,000 = 5M) #
# minimumValue = minimum value to start formatting strings #
priceSuffixes:
   minimumValue: 10000
   k:
      enabled: true
      value: 1000
   M:
      enabled: true
      value: 1000000
   B:
      enabled: true
      value: 1000000000
   T:
      enabled: true
      value: 1000000000000
   P:
      enabled: true
      value: 1000000000000000
   E:
      enabled: true
      value: 1000000000000000000

# =================================================================== #
#                           SHOP DISPLAY                              #
# =================================================================== #
# https://github.com/snowgears/shopbugs/wiki/Configuration-(config.yml)#shop-display

# This will change the type of item display that shops will use by default above their chests #
# The options are: NONE, ITEM, GLASS_CASE, LARGE_ITEM, ITEM_FRAME #
displayType: ITEM

# This will show the hover text above the item display #
# The options are: NONE, RIGHT_CLICK_CHEST, VIEW_SIGN #
displayNameTags: VIEW_SIGN

# This will change the order that display types are cycled in #
# To remove a display type as a cycle option, remove it from this list #
# The options are: NONE, ITEM, GLASS_CASE, LARGE_ITEM, ITEM_FRAME #
displayCycle:
   - NONE
   - ITEM
   - GLASS_CASE
   - LARGE_ITEM
   - ITEM_FRAME

# This will force shop display to be set to NONE if the display has no room #
# If this is false, the shop will simply say it cannot be created because the display is blocked #
forceDisplayToNoneIfBlocked: true

# This controls what light level (0 to 15) shop displays emit #
# THIS CAN ONLY BE USED IN MINECRAFT 1.17 OR ABOVE #
displayLightLevel: 0

# This controls whether the item frames of shop displays are glowing #
# THIS CAN ONLY BE USED IN MINECRAFT 1.17 OR ABOVE #
setGlowingItemFrame: false

# This controls whether shop sign text should be glowing by default #
# THIS CAN ONLY BE USED IN MINECRAFT 1.17 OR ABOVE #
# Signs on Bedrock Edition might look dimmed out
setGlowingSignText: false

# =================================================================== #
#                         SHOP INTERACTIONS                           #
# =================================================================== #
# https://github.com/snowgears/shopbugs/wiki/Configuration-(config.yml)#shop-interactions

# Here you can map player actions on shops to specific controls
#   - NONE
#   - LEFT_CLICK_SIGN
#   - SHIFT_LEFT_CLICK_SIGN
#   - RIGHT_CLICK_SIGN
#   - SHIFT_RIGHT_CLICK_SIGN
#
#   - LEFT_CLICK_CHEST
#   - SHIFT_LEFT_CLICK_CHEST
#   - RIGHT_CLICK_CHEST
#   - SHIFT_RIGHT_CLICK_CHEST
actionMappings:
   transactWithShop: RIGHT_CLICK_SIGN
   transactWithShopFullStack: SHIFT_RIGHT_CLICK_SIGN
   viewShopDetails: LEFT_CLICK_CHEST
   cycleShopDisplay: SHIFT_RIGHT_CLICK_CHEST

# These are the methods players are able to use to create shops #
# placeSign - players can place signs on chests and fill out the info on the sign itself #
# hitChest - players can hit a chest and they will be prompted to fill out the info in chat. A sign will be created. #
creationMethod:
   placeSign: true
   hitChest: true

# This will show shop creation instructions as floating text above shops #
displayFloatingCreateText: true

# This will allow players to use the limited creative mode selection tool to choose shop items when creating a shop #
# This is triggered when the player right clicks a chest with an empty hand #
allowCreativeSelection: true

# If this is set to true, shops will require you to be sneaking (holding 'shift') to destroy them
destroyShopRequiresSneak: false

# These will play sounds and particle effects when creating and using shops #
# These will need to be set to false if your server is running anything less than Minecraft 1.9 #
playSounds: true
playEffects: true

# If this is set to true, LEFT side of combo shop signs will BUY items and RIGHT side will SELL items #
# If this is set to false, LEFT side of combo shop signs will SELL items and RIGHT side will BUY items #
inverseComboShops: false

# Options:
# NONE - all items can be listed in shops
# DENY_LIST - all items except those defined in itemList.yml can be listed in shops
# ALLOW_LIST - only items defined in itemList.yml can be listed in shops
itemList: NONE

# Add the names of worlds that you do not want shops to be able to be created in here #
worldBlacklist:
   - "example_world"
   - "example2_world"

# These are the different types of containers that can be used for shops #
enabledContainers:
   - BARREL
   - CHEST
   - ENDER_CHEST
   - TRAPPED_CHEST
   - SHULKER_BOX
   - BLACK_SHULKER_BOX
   - BLUE_SHULKER_BOX
   - BROWN_SHULKER_BOX
   - CYAN_SHULKER_BOX
   - GRAY_SHULKER_BOX
   - GREEN_SHULKER_BOX
   - LIGHT_BLUE_SHULKER_BOX
   - LIGHT_GRAY_SHULKER_BOX
   - LIME_SHULKER_BOX
   - MAGENTA_SHULKER_BOX
   - ORANGE_SHULKER_BOX
   - PINK_SHULKER_BOX
   - PURPLE_SHULKER_BOX
   - RED_SHULKER_BOX
   - WHITE_SHULKER_BOX
   - YELLOW_SHULKER_BOX

# =================================================================== #
#                    DATABASE LOGGING SETTINGS                        #
#                  OFFLINE PURCHASE NOTIFICATIONS                     #
# =================================================================== #
# https://github.com/snowgears/shopbugs/wiki/Configuration-(config.yml)#database-logging--notifications

# Database logging for player Shop Actions & Transactions #
# Required for Offline Purchase Notifications to be sent, default enabled with FILE database #
# Also helpful if you want to keep an eye out for cheaters that abuse Shop bugs so that you can take action. #
#
# It will track:
# * Anytime a player performs a Shop action (see `actionMappings`). Tracks timestamp, shop, player, action performed, and transaction id.
# * Shop Transactions that are executed. Tracks transaction id, price, amount, and item traded in the transaction.
logging:
   # options for database `type` are:
   # - 'OFF': Disables database logging and offline purchase notifications
   # - 'FILE': (Default) Uses a File based H2 database for tracking purchases, requires no extra setup
   # - 'MYSQL': Uses a remote MYSQL Database to manage purchase tracking
   # - 'MARIADB': Uses a remote MARIADB Database to manage purchase tracking
   type: "FILE"
   serverName: "127.0.0.1"
   databaseName: "shopdb"
   port: 3306
   user: "shop"
   password: "mysecurepassword"
   # properties are only used on a 'MYSQL' type for now, you shouldn't need to touch this normally
   properties:
      - "useSSL=false"

# Logging must be enabled for purchase notifications to appear!
# Check chatConfig.yml to customize the offline purchase notification message #
offlinePurchaseNotifications:
   # Should offline purchases be shown to the user
   enabled: true

# =================================================================== #
#                    INTEGRATION HOOK SETTINGS                        #
# =================================================================== #
# https://github.com/snowgears/shopbugs/wiki/Configuration-(config.yml)#integrations

# The following plugins are automatically integrated when detected (no configuration needed):
# - LWC: Protects shops from being broken into by non-owners & allows player purchases
# - BentoBox: Handles shop deletion when islands are reset or deleted
# - AdvancedRegionMarket (ARM): Handles shop deletion when regions are reset
# - PlotSquared: Handles shop deletion when plots are reset or deleted

# The following plugins require explicit configuration below:

# If WorldGuard is installed Shop will by default ALWAYS respect the WG flags 'passthrough', 'build', 'chest-access'. #
# If you would like to ADDITIONALLY require Shops to be created in WorldGuard regions with a Shop flag set (flag=allow-shop), set `hookWorldGuard` to `true` #
# WorldGuard plugin must be installed for this feature to work #
# For more details: https://github.com/snowgears/shopbugs/wiki/Configuration-(config.yml)#hookWorldGuard #
hookWorldGuard: false

# Setting this to true will force all Shops to be created in Towny regions where the players are residents #
# Towny plugin must be installed for this feature to work #
hookTowny: false

# If you use DynMap, this controls how shops show up as markers #
# Set enabled to true to show shops on your DynMap #
dynmap-marker:
   enabled: false
   name: Shop
   preview: "[item](x[item amount]) - [shop type] - [price]"
   description: "Item: [item](x[item amount])<br />Owner: [owner]<br />Type: [shop type]<br />Price: [price]<br />Stock: [stock]<br />---------------<br />[location]<br />"

# If you use BlueMap, this controls how shops show up as markers #
# Set enabled to true to show shops on your BlueMap #
bluemap-marker:
   enabled: false
   icon: "https://i.imgur.com/oCI3XJC.png"
   label: |
      <div style='background: rgba(0,0,0,0.7); color: #fff; font-size: 16px; padding: 5px; width: 200px; height: 140px;'>
        <div style='font-weight: bold; color: #fff; font-size: 20px;'>[item] x[item amount]</div>
        <div style='mt:80px;'>Owner: [owner]</div>
        <div style='mt:80px;'>Type: [shop type]</div>
        <div style='mt:80px; color: #7fca8c;'>Price: [price]</div>
        <div style='mt:80px;'>Stock: [stock]</div>
        <div style='mt:80px; color: #aaa; font-size: 20px;'>[location]</div>
      </div>
   minDistance: 0
   maxDistance: 500

# =================================================================== #
#                   SHOP PERFORMANCE OPTIMIZATIONS                    #
# =================================================================== #
# https://github.com/snowgears/shopbugs/wiki/Configuration-(config.yml)#shop-performance-optimizations

# You should not need to change these settings, we have tried to balance them for performance & experience. #
# If you are experiencing performance issues however, you can try to tune them. #

# How often (in seconds) to check for shop displays that need to be shown to players
# Lower values make shop displays appear faster.
# You can increase this if you are experiencing performance issues to reduce the number of checks.
displayProcessInterval: 1

# How far a player needs to move (in blocks) before shop display checks should be processed
# This prevents unnecessary processing when players are standing still
# Recommended range: 1-4, default: 1.0
displayMovementThreshold: 1.0

# Maximum distance (in blocks) at which shop displays will be shown to players.
# Mainly affects player performance, not server performance.
# Recommended range: 16-32, default: 20.0
# For an extra smooth experience, you can set this higher to around 32 (radius 2), but this will also increase resource usage on the server.
# NOTE: Default "Entity Render Distance" settings for the Minecraft client is 20 blocks,
#       so setting this higher than 20 will only "preload" shop displays for players beyond this distance.
maxShopDisplayDistance: 20.0

# Radius (in chunks) around a player to search for shops
# Each increment searches exponentially more chunks (1=3x3 area, 2=5x5 area, etc)
# Recommended: 1, default: 1
# You can set this higher, but unless you are going above 24, you will not see any difference.
# The code is highly optimized, so you can set this higher, but you should not need to.
shopSearchRadius: 1

# Number of shop displays to process in a single batch when sending to a player
# This setting helps make shop displays appear more smoothly by sending them in smaller groups
# Lower values create a smoother experience but take longer to fully load all displays
# Higher values load displays faster but may cause momentary client lag
# This primarily affects client-side performance, not server performance
# Recommended range: 5-20, default: 10
displayBatchSize: 10

# Delay between batches of shop displays in server ticks (20 ticks = 1 second)
# This setting controls how much time passes between sending each batch of displays to a player
# Lower values make all displays appear faster but may cause client stuttering
# Higher values create a smoother appearance but take longer to show all displays
# This primarily affects client-side experience, not server performance
# Recommended range: 1-3, default: 2
displayBatchDelay: 2

# =================================================================== #
#                            DEBUG TOOLS                              #
# =================================================================== #
# https://github.com/snowgears/shopbugs/wiki/Configuration-(config.yml)#debug-tools

# Normally Developer Use only, but helpful if you are running into bugs and want more details!
#
# If you are running into issues, or doing a lot of testing, you can enable these debug settings
# in order to speed up your debugging!

# To get more visibility into Shop actions, you can increase the log level to see more!
# Available Log Levels:
# * INFO   : Standard logging, only logs on startup, warnings, and errors
# * NOTICE : Logs significant events like shop creation/deletion
# * HELPFUL: Logs important in-game events such as transactions (RECOMMENDED)
# * DEBUG  : Logs detailed information useful for debugging features
# * TRACE  : Logs step-by-step execution details
# * SPAM   : Logs extremely verbose information for deep diagnostics
# * HYPER  : Logs at hyper speed, the deepest level of diagnostics
logLevel: HELPFUL
enableLogColor: false

debug:
   # (default: false) Should owners be able to buy/sell from their own shop
   allowUseOwnShop: false
   # (default: false) Show price calculation debug logs when purchases are made
   transactionDebugLogs: false
   # (default: 5000) The cooldown in milliseconds for how long a player must wait between creating new shop creation processes
   shopCreateCooldown: 5000
   # (default: false) Set ALL shops to be saved when the server starts up, right after they are loaded from the file.
   #                  Can be helpful if you have very old nbt data or items that are incompatible in player files.
   # Note: MAKE BACKUP BEFORE USING THIS!
   forceResaveAll: false

